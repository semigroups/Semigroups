name: "Extended tests"
on:
  workflow_dispatch:
  push:
    branches:
      - rc-v*
  pull_request:
    paths:
      - ".VERSION"
  schedule:
    # Every day at 2:30 AM UTC
    - cron: 30 2 * * *

concurrency:
  # Group by workflow and ref; the last component ensures that for pull
  # requests, we limit to one concurrent job, but for the main branch we don't
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.ref != 'refs/heads/main' || github.run_number }}
  # Only cancel intermediate pull request builds
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

jobs:
  extended:
    name: "${{ matrix.os }} / GAP ${{ matrix.gap-version }} / ${{ matrix.ABI }}-bit"
    runs-on: "${{ matrix.os }}-latest"
    strategy:
      fail-fast: false
      matrix:
        os:
          - Ubuntu
        gap-version:
          - master
        ABI:
          - 64
          - 32

        include:
          # macOS job
          - gap-version: master
            # to ensure datastructures>= v0.2.6
            pkgs-to-clone: "datastructures"
            os: macOS
            ABI: 64

    steps:
      - uses: actions/checkout@v4
      - name: "Install macOS dependencies"
        if: ${{ runner.os == 'macOS' }}
        run: brew install automake libtool
      # Setup ccache, to speed up repeated compilation of the same binaries
      # (i.e., GAP and the packages)
      - name: "Setup ccache"
        if: ${{ runner.os != 'Windows' }}
        uses: Chocobo1/setup-ccache-action@v1
        with:
          update_packager_index: false
          override_cache_key: ${{ runner.os }}-${{ matrix.gap-version }}-${{ matrix.ABI }}-${{ github.ref }}
          override_cache_key_fallback: ${{ runner.os }}-${{ matrix.gap-version }}-${{ matrix.ABI }}
      - name: "Install GAP and clone/compile necessary packages"
        uses: gap-actions/setup-gap@v2
        with:
          # digraphs included here to ensure version >=1.5.0
          GAP_PKGS_TO_CLONE: "digraphs/digraphs ${{ matrix.pkgs-to-clone }}"
          GAP_PKGS_TO_BUILD: "digraphs io orb datastructures profiling"
          GAPBRANCH: ${{ matrix.gap-version }}
          ABI: ${{ matrix.ABI }}
      - name: "Build Semigroups"
        uses: gap-actions/build-pkg@v1
        with:
          ABI: ${{ matrix.ABI }}
          CONFIGFLAGS: --disable-hpcombi
      - name: "Run GAP's tst/teststandard.g"
        uses: gap-actions/run-pkg-tests@v2
        with:
          GAP_TESTFILE: "ci/run-gap-teststandard.g"
      - name: "Run GAP's tst/testbugfix.g"
        uses: gap-actions/run-pkg-tests@v2
        with:
          GAP_TESTFILE: "ci/run-gap-testbugfix.g"

