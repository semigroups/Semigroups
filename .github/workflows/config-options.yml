name: "Configuration options"
on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - "main"
      - "stable-*.*"
  schedule:
    # Every day at 4:15 AM UTC
    - cron: '15 4 * * *'

concurrency:
  # Group by workflow and ref; the last component ensures that for pull
  # requests, we limit to one concurrent job, but for the default branch we
  # don't
  group: ${{ github.workflow }}-${{ github.ref }}-${{ (github.ref != github.event.repository.default_branch && !startsWith(github.ref, 'refs/heads/stable-')) || github.run_number }}
  # Only cancel intermediate pull request builds
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

jobs:
  enable-debug:
    name: "Enable debug"
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v5
      - name: "Setup ccache"
        uses: Chocobo1/setup-ccache-action@v1
        with:
          update_packager_index: false
          override_cache_key: ${{ runner.os }}-$GAPBRANCH-64-${{ github.ref }}
          override_cache_key_fallback: ${{ runner.os }}-$GAPBRANCH-64
      - name: "Install GAP"
        uses: gap-actions/setup-gap@v3
      - name: "Build necessary GAP packages"
        run: |
          cd ${GAPROOT}/pkg
          ../bin/BuildPackages.sh --strict digraphs io orb datastructures profiling
      - name: "Build Semigroups"
        uses: gap-actions/build-pkg@v2
        with:
          CONFIGFLAGS: --disable-hpcombi --enable-debug
      - name: "Run Semigroups package's tst/teststandard.g"
        uses: gap-actions/run-pkg-tests@v4

  enable-hpcombi:
    name: "Enable HPCombi"
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v5
        # Don't use ccache, since sometimes this fails when using -mavx
      - name: "Install GAP"
        uses: gap-actions/setup-gap@v3
      - name: "Build necessary GAP packages"
        run: |
          cd ${GAPROOT}/pkg
          ../bin/BuildPackages.sh --strict digraphs io orb datastructures profiling
      - name: "Build Semigroups"
        uses: gap-actions/build-pkg@v2
      - name: "Run Semigroups package's tst/teststandard.g"
        uses: gap-actions/run-pkg-tests@v4
      - uses: gap-actions/process-coverage@v3
      - uses: codecov/codecov-action@v5
      - name: "Run GAP's tst/testinstall.g"
        uses: gap-actions/run-pkg-tests@v4
        with:
          testfile: "ci/run-gap-testinstall.g"

  with-external-libsemigroups:
    name: "External libsemigroups"
    runs-on: "ubuntu-latest"
    env:
      PKG_CONFIG_PATH: "/home/runner/micromamba/envs/libsemigroups/lib/pkgconfig:/home/runner/micromamba/envs/libsemigroups/share/pkgconfig/"
      LD_LIBRARY_PATH: "/home/runner/micromamba/envs/libsemigroups/lib"
      DO_NOT_DOWNLOAD_LIBSEMIGROUPS: 1 # prevents prerequisites.sh
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v5
      - name: "Install conda environment from environment.yml . . ."
        uses: mamba-org/setup-micromamba@v2
        with:
            environment-file: environment.yml
            cache-environment: true
      - name: "Activate \"libsemigroups\" environment . . ."
        run:  micromamba activate libsemigroups
      - name: "Setup ccache"
        uses: Chocobo1/setup-ccache-action@v1
        with:
          update_packager_index: false
          override_cache_key: ${{ runner.os }}-$GAPBRANCH-64-${{ github.ref }}
          override_cache_key_fallback: ${{ runner.os }}-$GAPBRANCH-64
      - run: mkdir libsemigroups
      - name: "Install GAP"
        uses: gap-actions/setup-gap@v3
      - name: "Build necessary GAP packages"
        run: |
          cd ${GAPROOT}/pkg
          ../bin/BuildPackages.sh --strict digraphs io orb datastructures profiling
      - name: "Build Semigroups"
        uses: gap-actions/build-pkg@v2
        with: # we use --with-external-fmt since this is available from conda
          CONFIGFLAGS: --disable-hpcombi --with-external-libsemigroups --enable-fmt --with-external-fmt
      - name: "Run Semigroups package's tst/teststandard.g"
        uses: gap-actions/run-pkg-tests@v4
